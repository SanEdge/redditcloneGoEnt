// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/renaldyhidayatt/redditgoent/ent/comment"
	"github.com/renaldyhidayatt/redditgoent/ent/post"
	"github.com/renaldyhidayatt/redditgoent/ent/schema"
	"github.com/renaldyhidayatt/redditgoent/ent/subreddit"
	"github.com/renaldyhidayatt/redditgoent/ent/user"
	"github.com/renaldyhidayatt/redditgoent/ent/verificationtoken"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[1].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	// commentDescUpdatedAt is the schema descriptor for updated_at field.
	commentDescUpdatedAt := commentFields[2].Descriptor()
	// comment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	comment.UpdateDefaultUpdatedAt = commentDescUpdatedAt.UpdateDefault.(func() time.Time)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescVoteCount is the schema descriptor for voteCount field.
	postDescVoteCount := postFields[3].Descriptor()
	// post.DefaultVoteCount holds the default value on creation for the voteCount field.
	post.DefaultVoteCount = postDescVoteCount.Default.(int)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[4].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescUpdatedAt is the schema descriptor for updated_at field.
	postDescUpdatedAt := postFields[5].Descriptor()
	// post.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	post.UpdateDefaultUpdatedAt = postDescUpdatedAt.UpdateDefault.(func() time.Time)
	subredditFields := schema.Subreddit{}.Fields()
	_ = subredditFields
	// subredditDescName is the schema descriptor for name field.
	subredditDescName := subredditFields[0].Descriptor()
	// subreddit.NameValidator is a validator for the "name" field. It is called by the builders before save.
	subreddit.NameValidator = subredditDescName.Validators[0].(func(string) error)
	// subredditDescDescription is the schema descriptor for description field.
	subredditDescDescription := subredditFields[1].Descriptor()
	// subreddit.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	subreddit.DescriptionValidator = subredditDescDescription.Validators[0].(func(string) error)
	// subredditDescCreatedAt is the schema descriptor for created_at field.
	subredditDescCreatedAt := subredditFields[2].Descriptor()
	// subreddit.DefaultCreatedAt holds the default value on creation for the created_at field.
	subreddit.DefaultCreatedAt = subredditDescCreatedAt.Default.(func() time.Time)
	// subredditDescUpdatedAt is the schema descriptor for updated_at field.
	subredditDescUpdatedAt := subredditFields[3].Descriptor()
	// subreddit.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subreddit.UpdateDefaultUpdatedAt = subredditDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescEnabled is the schema descriptor for enabled field.
	userDescEnabled := userFields[3].Descriptor()
	// user.DefaultEnabled holds the default value on creation for the enabled field.
	user.DefaultEnabled = userDescEnabled.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[5].Descriptor()
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	verificationtokenFields := schema.VerificationToken{}.Fields()
	_ = verificationtokenFields
	// verificationtokenDescToken is the schema descriptor for token field.
	verificationtokenDescToken := verificationtokenFields[0].Descriptor()
	// verificationtoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	verificationtoken.TokenValidator = verificationtokenDescToken.Validators[0].(func(string) error)
	// verificationtokenDescCreatedAt is the schema descriptor for created_at field.
	verificationtokenDescCreatedAt := verificationtokenFields[1].Descriptor()
	// verificationtoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	verificationtoken.DefaultCreatedAt = verificationtokenDescCreatedAt.Default.(func() time.Time)
	// verificationtokenDescUpdatedAt is the schema descriptor for updated_at field.
	verificationtokenDescUpdatedAt := verificationtokenFields[2].Descriptor()
	// verificationtoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	verificationtoken.UpdateDefaultUpdatedAt = verificationtokenDescUpdatedAt.UpdateDefault.(func() time.Time)
}
