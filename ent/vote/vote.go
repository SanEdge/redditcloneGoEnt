// Code generated by ent, DO NOT EDIT.

package vote

import (
	"fmt"
)

const (
	// Label holds the string label denoting the vote type in the database.
	Label = "vote"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVote holds the string denoting the vote field in the database.
	FieldVote = "vote"
	// EdgePost holds the string denoting the post edge name in mutations.
	EdgePost = "post"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the vote in the database.
	Table = "votes"
	// PostTable is the table that holds the post relation/edge.
	PostTable = "posts"
	// PostInverseTable is the table name for the Post entity.
	// It exists in this package in order to avoid circular dependency with the "post" package.
	PostInverseTable = "posts"
	// PostColumn is the table column denoting the post relation/edge.
	PostColumn = "vote_post"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "users"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "vote_user"
)

// Columns holds all SQL columns for vote fields.
var Columns = []string{
	FieldID,
	FieldVote,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Vote defines the type for the "vote" enum field.
type Vote string

// Vote values.
const (
	VoteUpvote   Vote = "upvote"
	VoteDownvote Vote = "downvote"
)

func (v Vote) String() string {
	return string(v)
}

// VoteValidator is a validator for the "vote" field enum values. It is called by the builders before save.
func VoteValidator(v Vote) error {
	switch v {
	case VoteUpvote, VoteDownvote:
		return nil
	default:
		return fmt.Errorf("vote: invalid enum value for vote field: %q", v)
	}
}
